#!/bin/sh
set -e

#
usage() {
    echo "Missing $1"
    exit 1
}

# populate if not set
[ -z "$GITHUB_RELEASE_ACCESS_TOKEN" ] && export GITHUB_RELEASE_ACCESS_TOKEN=$GITHUB_TOKEN
[ -z "$GITHUB_RELEASE_ACCESS_TOKEN" ] && usage GITHUB_TOKEN

[ -z "$GITHUB_RELEASE_REPOSITORY" ] && export GITHUB_RELEASE_REPOSITORY=$(git remote get-url origin|cut -f4-5  -d/)
[ -z "$GITHUB_RELEASE_REPOSITORY" ] && export GITHUB_RELEASE_REPOSITORY=$(git remote get-url origin|cut -f2 -d:|cut -f1 -d.)
[ -z "$GITHUB_RELEASE_REPOSITORY" ] && usage GITHUB_RELEASE_REPOSITORY

[ -z "$GITHUB_RELEASE_TAG" ] && export GITHUB_RELEASE_TAG=$(git tag -l --contains HEAD)
[ -z "$GITHUB_RELEASE_TAG" ] && usage GITHUB_RELEASE_TAG

[ -z "$GITHUB_RELEASE_COMMIT" ] && export GITHUB_RELEASE_COMMIT=$(git log -1 --format="%H")
[ -z "$GITHUB_RELEASE_COMMIT" ] && usage GITHUB_RELEASE_COMMIT

[ -z "$GITHUB_RELEASE_DIST" ] && GITHUB_RELEASE_DIST="dist/*.tar.gz dist/*.zip"

#
TAR_FILE="/tmp/ghreleaser.tar.gz"
RELEASES_URL="https://github.com/gostones/ghreleaser/releases"
test -z "$TMPDIR" && TMPDIR="$(mktemp -d)"

last_version() {
  curl -sL -o /dev/null -w %{url_effective} "$RELEASES_URL/latest" | 
    rev | 
    cut -f1 -d'/'| 
    rev
}

download() {
  test -z "$VERSION" && VERSION="$(last_version)"
  test -z "$VERSION" && {
    echo "Unable to get ghreleaser version." >&2
    exit 1
  }
  rm -f "$TAR_FILE"
  curl -s -L -o "$TAR_FILE" \
    "$RELEASES_URL/download/$VERSION/ghreleaser_$(uname -s)_$(uname -m).tar.gz"
}

download
tar -xf "$TAR_FILE" -C "$TMPDIR"
"${TMPDIR}/ghreleaser" "$GITHUB_RELEASE_TAG" $GITHUB_RELEASE_DIST "$@"
##
